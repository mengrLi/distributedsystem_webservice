
package ws_client.wst;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Server", targetNamespace = "http://Server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Server {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "run", targetNamespace = "http://Server/", className = "ws_client.wst.Run")
    @ResponseWrapper(localName = "runResponse", targetNamespace = "http://Server/", className = "ws_client.wst.RunResponse")
    @Action(input = "http://Server/Server/runRequest", output = "http://Server/Server/runResponse")
    public void run();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "initServer", targetNamespace = "http://Server/", className = "ws_client.wst.InitServer")
    @ResponseWrapper(localName = "initServerResponse", targetNamespace = "http://Server/", className = "ws_client.wst.InitServerResponse")
    @Action(input = "http://Server/Server/initServerRequest", output = "http://Server/Server/initServerResponse")
    public void initServer(
        @WebParam(name = "arg0", targetNamespace = "")
        CampusName arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAdminId", targetNamespace = "http://Server/", className = "ws_client.wst.CheckAdminId")
    @ResponseWrapper(localName = "checkAdminIdResponse", targetNamespace = "http://Server/", className = "ws_client.wst.CheckAdminIdResponse")
    @Action(input = "http://Server/Server/checkAdminIdRequest", output = "http://Server/Server/checkAdminIdResponse")
    public boolean checkAdminId(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createRoom", targetNamespace = "http://Server/", className = "ws_client.wst.CreateRoom")
    @ResponseWrapper(localName = "createRoomResponse", targetNamespace = "http://Server/", className = "ws_client.wst.CreateRoomResponse")
    @Action(input = "http://Server/Server/createRoomRequest", output = "http://Server/Server/createRoomResponse")
    public String createRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteRoom", targetNamespace = "http://Server/", className = "ws_client.wst.DeleteRoom")
    @ResponseWrapper(localName = "deleteRoomResponse", targetNamespace = "http://Server/", className = "ws_client.wst.DeleteRoomResponse")
    @Action(input = "http://Server/Server/deleteRoomRequest", output = "http://Server/Server/deleteRoomResponse")
    public String deleteRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookRoom", targetNamespace = "http://Server/", className = "ws_client.wst.BookRoom")
    @ResponseWrapper(localName = "bookRoomResponse", targetNamespace = "http://Server/", className = "ws_client.wst.BookRoomResponse")
    @Action(input = "http://Server/Server/bookRoomRequest", output = "http://Server/Server/bookRoomResponse")
    public String bookRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeReservation", targetNamespace = "http://Server/", className = "ws_client.wst.ChangeReservation")
    @ResponseWrapper(localName = "changeReservationResponse", targetNamespace = "http://Server/", className = "ws_client.wst.ChangeReservationResponse")
    @Action(input = "http://Server/Server/changeReservationRequest", output = "http://Server/Server/changeReservationResponse")
    public String changeReservation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableTimeSlotCount", targetNamespace = "http://Server/", className = "ws_client.wst.GetAvailableTimeSlotCount")
    @ResponseWrapper(localName = "getAvailableTimeSlotCountResponse", targetNamespace = "http://Server/", className = "ws_client.wst.GetAvailableTimeSlotCountResponse")
    @Action(input = "http://Server/Server/getAvailableTimeSlotCountRequest", output = "http://Server/Server/getAvailableTimeSlotCountResponse")
    public String getAvailableTimeSlotCount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableTimeSlotByRoom", targetNamespace = "http://Server/", className = "ws_client.wst.GetAvailableTimeSlotByRoom")
    @ResponseWrapper(localName = "getAvailableTimeSlotByRoomResponse", targetNamespace = "http://Server/", className = "ws_client.wst.GetAvailableTimeSlotByRoomResponse")
    @Action(input = "http://Server/Server/getAvailableTimeSlotByRoomRequest", output = "http://Server/Server/getAvailableTimeSlotByRoomResponse")
    public String getAvailableTimeSlotByRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelBooking", targetNamespace = "http://Server/", className = "ws_client.wst.CancelBooking")
    @ResponseWrapper(localName = "cancelBookingResponse", targetNamespace = "http://Server/", className = "ws_client.wst.CancelBookingResponse")
    @Action(input = "http://Server/Server/cancelBookingRequest", output = "http://Server/Server/cancelBookingResponse")
    public boolean cancelBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkIDAdmin", targetNamespace = "http://Server/", className = "ws_client.wst.CheckIDAdmin")
    @ResponseWrapper(localName = "checkIDAdminResponse", targetNamespace = "http://Server/", className = "ws_client.wst.CheckIDAdminResponse")
    @Action(input = "http://Server/Server/checkIDAdminRequest", output = "http://Server/Server/checkIDAdminResponse")
    public boolean checkIDAdmin(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
